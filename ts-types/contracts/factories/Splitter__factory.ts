/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import { Contract, ContractFactory, Overrides } from "@ethersproject/contracts";

import type { Splitter } from "../Splitter";

export class Splitter__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(wethAddress_: string, overrides?: Overrides): Promise<Splitter> {
    return super.deploy(wethAddress_, overrides || {}) as Promise<Splitter>;
  }
  getDeployTransaction(
    wethAddress_: string,
    overrides?: Overrides
  ): TransactionRequest {
    return super.getDeployTransaction(wethAddress_, overrides || {});
  }
  attach(address: string): Splitter {
    return super.attach(address) as Splitter;
  }
  connect(signer: Signer): Splitter__factory {
    return super.connect(signer) as Splitter__factory;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Splitter {
    return new Contract(address, _abi, signerOrProvider) as Splitter;
  }
}

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "wethAddress_",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint32",
        name: "percent",
        type: "uint32",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "success",
        type: "bool",
      },
    ],
    name: "TransferETH",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint32",
        name: "percent",
        type: "uint32",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "success",
        type: "bool",
      },
    ],
    name: "TransferToken",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "accounts",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "uint32",
        name: "percent",
        type: "uint32",
      },
    ],
    name: "amountFromPercent",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "accounts_",
        type: "address[]",
      },
      {
        internalType: "uint32[]",
        name: "percentages_",
        type: "uint32[]",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "percentages",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "splitETH",
    outputs: [
      {
        internalType: "bool",
        name: "success",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    name: "splitToken",
    outputs: [
      {
        internalType: "bool",
        name: "success",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "validate",
    outputs: [
      {
        internalType: "bool",
        name: "isValid",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "wethAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
];

const _bytecode =
  "0x60a060405234801561001057600080fd5b50604051610e63380380610e6383398101604081905261002f91610044565b60601b6001600160601b031916608052610072565b600060208284031215610055578081fd5b81516001600160a01b038116811461006b578182fd5b9392505050565b60805160601c610dc661009d6000396000818160d20152818161089301526109410152610dc66000f3fe60806040526004361061007f5760003560e01c80637965ff9b1161004e5780637965ff9b14610143578063d1aa25d014610171578063f2a40db814610186578063f8858386146101a657610086565b8063249bc14b1461008b5780634f0e0ef3146100c0578063615eacd91461010c5780636901f6681461012e57610086565b3661008657005b600080fd5b34801561009757600080fd5b506100ab6100a6366004610bb1565b6101db565b60405190151581526020015b60405180910390f35b3480156100cc57600080fd5b506100f47f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b0390911681526020016100b7565b34801561011857600080fd5b5061012c610127366004610bdf565b61044b565b005b34801561013a57600080fd5b506100ab6104dc565b34801561014f57600080fd5b5061016361015e366004610c98565b610555565b6040519081526020016100b7565b34801561017d57600080fd5b506100ab61057c565b34801561019257600080fd5b506100f46101a1366004610c68565b610718565b3480156101b257600080fd5b506101c66101c1366004610c68565b610742565b60405163ffffffff90911681526020016100b7565b6040517f70a0823100000000000000000000000000000000000000000000000000000000815230600482015260009081906001600160a01b038416906370a082319060240160206040518083038186803b15801561023857600080fd5b505afa15801561024c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102709190610c80565b90506001915060005b60015481101561044457600061031d85600184815481106102aa57634e487b7160e01b600052603260045260246000fd5b9060005260206000200160009054906101000a90046001600160a01b031661031886600087815481106102ed57634e487b7160e01b600052603260045260246000fd5b90600052602060002090600891828204019190066004029054906101000a900463ffffffff16610555565b61077c565b90508061032957600093505b7f9ae19e825662b73e2bdce052d3bcd10d32c08154f587944febc30db043171a1d856001848154811061036c57634e487b7160e01b600052603260045260246000fd5b9060005260206000200160009054906101000a90046001600160a01b03166103af86600087815481106102ed57634e487b7160e01b600052603260045260246000fd5b600086815481106103d057634e487b7160e01b600052603260045260246000fd5b6000918252602091829020600882040154604080516001600160a01b03978816815295909616928501929092529383019190915260079092166004026101000a90910463ffffffff166060820152821515608082015260a00160405180910390a1508061043c81610d5f565b915050610279565b5050919050565b60025460ff16156104bc576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601c60248201527f53706c697474657220616c726561647920696e697469616c697a656400000000604482015260640160405180910390fd5b6104c860018585610a2b565b506104d560008383610aa6565b5050505050565b600080805b60015481101561054c576000818154811061050c57634e487b7160e01b600052603260045260246000fd5b60009182526020909120600882040154610538916007166004026101000a900463ffffffff1683610d08565b91508061054481610d5f565b9150506104e1565b50606414905090565b6000606461056963ffffffff841685610d40565b6105739190610d20565b90505b92915050565b60014760005b6001548110156107135760006105fa600183815481106105b257634e487b7160e01b600052603260045260246000fd5b9060005260206000200160009054906101000a90046001600160a01b03166105f585600086815481106102ed57634e487b7160e01b600052603260045260246000fd5b61087e565b90508061060657600093505b7f85969c922fcef8a96679d163ec89951fce72dc20ee08befdee0768e06e36944f6001838154811061064857634e487b7160e01b600052603260045260246000fd5b9060005260206000200160009054906101000a90046001600160a01b031661068b85600086815481106102ed57634e487b7160e01b600052603260045260246000fd5b600085815481106106ac57634e487b7160e01b600052603260045260246000fd5b6000918252602091829020600882040154604080516001600160a01b03969096168652928501939093526007166004026101000a90910463ffffffff1690820152821515606082015260800160405180910390a1508061070b81610d5f565b915050610582565b505090565b6001818154811061072857600080fd5b6000918252602090912001546001600160a01b0316905081565b6000818154811061075257600080fd5b9060005260206000209060089182820401919006600402915054906101000a900463ffffffff1681565b604080516001600160a01b038481166024830152604480830185905283518084039091018152606490920183526020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fa9059cbb00000000000000000000000000000000000000000000000000000000179052915160009283928392918816916108089190610ccf565b6000604051808303816000865af19150503d8060008114610845576040519150601f19603f3d011682016040523d82523d6000602084013e61084a565b606091505b50915091508180156108745750805115806108745750808060200190518101906108749190610c48565b9695505050505050565b600061088a83836109c8565b905080610576577f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663d0e30db0836040518263ffffffff1660e01b81526004016000604051808303818588803b1580156108ec57600080fd5b505af1158015610900573d6000803e3d6000fd5b50506040517fa9059cbb0000000000000000000000000000000000000000000000000000000081526001600160a01b038781166004830152602482018790527f000000000000000000000000000000000000000000000000000000000000000016935063a9059cbb92506044019050602060405180830381600087803b15801561098957600080fd5b505af115801561099d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109c19190610c48565b5092915050565b600080836001600160a01b03168361753090604051600060405180830381858888f193505050503d8060008114610a1b576040519150601f19603f3d011682016040523d82523d6000602084013e610a20565b606091505b509095945050505050565b828054828255906000526020600020908101928215610a96579160200282015b82811115610a965781547fffffffffffffffffffffffff0000000000000000000000000000000000000000166001600160a01b03843516178255602090920191600190910190610a4b565b50610aa2929150610b52565b5090565b82805482825590600052602060002090600701600890048101928215610a965791602002820160005b83821115610b1957833563ffffffff1683826101000a81548163ffffffff021916908363ffffffff1602179055509260200192600401602081600301049283019260010302610acf565b8015610b495782816101000a81549063ffffffff0219169055600401602081600301049283019260010302610b19565b5050610aa29291505b5b80821115610aa25760008155600101610b53565b60008083601f840112610b78578182fd5b50813567ffffffffffffffff811115610b8f578182fd5b6020830191508360208260051b8501011115610baa57600080fd5b9250929050565b600060208284031215610bc2578081fd5b81356001600160a01b0381168114610bd8578182fd5b9392505050565b60008060008060408587031215610bf4578283fd5b843567ffffffffffffffff80821115610c0b578485fd5b610c1788838901610b67565b90965094506020870135915080821115610c2f578384fd5b50610c3c87828801610b67565b95989497509550505050565b600060208284031215610c59578081fd5b81518015158114610bd8578182fd5b600060208284031215610c79578081fd5b5035919050565b600060208284031215610c91578081fd5b5051919050565b60008060408385031215610caa578182fd5b82359150602083013563ffffffff81168114610cc4578182fd5b809150509250929050565b60008251815b81811015610cef5760208186018101518583015201610cd5565b81811115610cfd5782828501525b509190910192915050565b60008219821115610d1b57610d1b610d7a565b500190565b600082610d3b57634e487b7160e01b81526012600452602481fd5b500490565b6000816000190483118215151615610d5a57610d5a610d7a565b500290565b6000600019821415610d7357610d73610d7a565b5060010190565b634e487b7160e01b600052601160045260246000fdfea264697066735822122070b337f06450edccba823b71227d57c9b5c45b3082278078946718e8a34d966a64736f6c63430008030033";
