/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import { Contract, ContractFactory, Overrides } from "@ethersproject/contracts";

import type { Splitter } from "../Splitter";

export class Splitter__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(overrides?: Overrides): Promise<Splitter> {
    return super.deploy(overrides || {}) as Promise<Splitter>;
  }
  getDeployTransaction(overrides?: Overrides): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): Splitter {
    return super.attach(address) as Splitter;
  }
  connect(signer: Signer): Splitter__factory {
    return super.connect(signer) as Splitter__factory;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Splitter {
    return new Contract(address, _abi, signerOrProvider) as Splitter;
  }
}

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint32",
        name: "percent",
        type: "uint32",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "success",
        type: "bool",
      },
    ],
    name: "TransferETH",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint32",
        name: "percent",
        type: "uint32",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "success",
        type: "bool",
      },
    ],
    name: "TransferToken",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "accounts",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "uint32",
        name: "percent",
        type: "uint32",
      },
    ],
    name: "amountFromPercent",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "accounts_",
        type: "address[]",
      },
      {
        internalType: "uint32[]",
        name: "percentages_",
        type: "uint32[]",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "percentages",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "splitETH",
    outputs: [
      {
        internalType: "bool",
        name: "success",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    name: "splitToken",
    outputs: [
      {
        internalType: "bool",
        name: "success",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "validate",
    outputs: [
      {
        internalType: "bool",
        name: "isValid",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50610c34806100206000396000f3fe6080604052600436106100745760003560e01c80637965ff9b1161004e5780637965ff9b146100ec578063d1aa25d01461011a578063f2a40db81461012f578063f8858386146101675761007b565b8063249bc14b14610080578063615eacd9146100b55780636901f668146100d75761007b565b3661007b57005b600080fd5b34801561008c57600080fd5b506100a061009b366004610a26565b61019c565b60405190151581526020015b60405180910390f35b3480156100c157600080fd5b506100d56100d0366004610a4d565b61040c565b005b3480156100e357600080fd5b506100a061049d565b3480156100f857600080fd5b5061010c610107366004610b06565b610516565b6040519081526020016100ac565b34801561012657600080fd5b506100a061053b565b34801561013b57600080fd5b5061014f61014a366004610ad6565b6106d7565b6040516001600160a01b0390911681526020016100ac565b34801561017357600080fd5b50610187610182366004610ad6565b610701565b60405163ffffffff90911681526020016100ac565b6040517f70a0823100000000000000000000000000000000000000000000000000000000815230600482015260009081906001600160a01b038416906370a082319060240160206040518083038186803b1580156101f957600080fd5b505afa15801561020d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102319190610aee565b90506001915060005b6001548110156104055760006102de856001848154811061026b57634e487b7160e01b600052603260045260246000fd5b9060005260206000200160009054906101000a90046001600160a01b03166102d986600087815481106102ae57634e487b7160e01b600052603260045260246000fd5b90600052602060002090600891828204019190066004029054906101000a900463ffffffff16610516565b61073b565b9050806102ea57600093505b7f9ae19e825662b73e2bdce052d3bcd10d32c08154f587944febc30db043171a1d856001848154811061032d57634e487b7160e01b600052603260045260246000fd5b9060005260206000200160009054906101000a90046001600160a01b031661037086600087815481106102ae57634e487b7160e01b600052603260045260246000fd5b6000868154811061039157634e487b7160e01b600052603260045260246000fd5b6000918252602091829020600882040154604080516001600160a01b03978816815295909616928501929092529383019190915260079092166004026101000a90910463ffffffff166060820152821515608082015260a00160405180910390a150806103fd81610bcd565b91505061023a565b5050919050565b60025460ff161561047d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601c60248201527f53706c697474657220616c726561647920696e697469616c697a656400000000604482015260640160405180910390fd5b610489600185856108a0565b506104966000838361091b565b5050505050565b600080805b60015481101561050d57600081815481106104cd57634e487b7160e01b600052603260045260246000fd5b600091825260209091206008820401546104f9916007166004026101000a900463ffffffff1683610b76565b91508061050581610bcd565b9150506104a2565b50606414905090565b6000606461052a63ffffffff841685610bae565b6105349190610b8e565b9392505050565b60014760005b6001548110156106d25760006105b96001838154811061057157634e487b7160e01b600052603260045260246000fd5b9060005260206000200160009054906101000a90046001600160a01b03166105b485600086815481106102ae57634e487b7160e01b600052603260045260246000fd5b61083d565b9050806105c557600093505b7f85969c922fcef8a96679d163ec89951fce72dc20ee08befdee0768e06e36944f6001838154811061060757634e487b7160e01b600052603260045260246000fd5b9060005260206000200160009054906101000a90046001600160a01b031661064a85600086815481106102ae57634e487b7160e01b600052603260045260246000fd5b6000858154811061066b57634e487b7160e01b600052603260045260246000fd5b6000918252602091829020600882040154604080516001600160a01b03969096168652928501939093526007166004026101000a90910463ffffffff1690820152821515606082015260800160405180910390a150806106ca81610bcd565b915050610541565b505090565b600181815481106106e757600080fd5b6000918252602090912001546001600160a01b0316905081565b6000818154811061071157600080fd5b9060005260206000209060089182820401919006600402915054906101000a900463ffffffff1681565b604080516001600160a01b038481166024830152604480830185905283518084039091018152606490920183526020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fa9059cbb00000000000000000000000000000000000000000000000000000000179052915160009283928392918816916107c79190610b3d565b6000604051808303816000865af19150503d8060008114610804576040519150601f19603f3d011682016040523d82523d6000602084013e610809565b606091505b50915091508180156108335750805115806108335750808060200190518101906108339190610ab6565b9695505050505050565b600080836001600160a01b03168361753090604051600060405180830381858888f193505050503d8060008114610890576040519150601f19603f3d011682016040523d82523d6000602084013e610895565b606091505b509095945050505050565b82805482825590600052602060002090810192821561090b579160200282015b8281111561090b5781547fffffffffffffffffffffffff0000000000000000000000000000000000000000166001600160a01b038435161782556020909201916001909101906108c0565b506109179291506109c7565b5090565b8280548282559060005260206000209060070160089004810192821561090b5791602002820160005b8382111561098e57833563ffffffff1683826101000a81548163ffffffff021916908363ffffffff1602179055509260200192600401602081600301049283019260010302610944565b80156109be5782816101000a81549063ffffffff021916905560040160208160030104928301926001030261098e565b50506109179291505b5b8082111561091757600081556001016109c8565b60008083601f8401126109ed578182fd5b50813567ffffffffffffffff811115610a04578182fd5b6020830191508360208260051b8501011115610a1f57600080fd5b9250929050565b600060208284031215610a37578081fd5b81356001600160a01b0381168114610534578182fd5b60008060008060408587031215610a62578283fd5b843567ffffffffffffffff80821115610a79578485fd5b610a85888389016109dc565b90965094506020870135915080821115610a9d578384fd5b50610aaa878288016109dc565b95989497509550505050565b600060208284031215610ac7578081fd5b81518015158114610534578182fd5b600060208284031215610ae7578081fd5b5035919050565b600060208284031215610aff578081fd5b5051919050565b60008060408385031215610b18578182fd5b82359150602083013563ffffffff81168114610b32578182fd5b809150509250929050565b60008251815b81811015610b5d5760208186018101518583015201610b43565b81811115610b6b5782828501525b509190910192915050565b60008219821115610b8957610b89610be8565b500190565b600082610ba957634e487b7160e01b81526012600452602481fd5b500490565b6000816000190483118215151615610bc857610bc8610be8565b500290565b6000600019821415610be157610be1610be8565b5060010190565b634e487b7160e01b600052601160045260246000fdfea2646970667358221220cc9fe8bf6d5beaa9917d4b67263144cca9ee07a5126aa77707aa1075f143291c64736f6c63430008030033";
