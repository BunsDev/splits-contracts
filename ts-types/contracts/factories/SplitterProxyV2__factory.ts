/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import { Contract, ContractFactory, Overrides } from "@ethersproject/contracts";

import type { SplitterProxyV2 } from "../SplitterProxyV2";

export class SplitterProxyV2__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    splitter_: string,
    wethAddress_: string,
    overrides?: Overrides
  ): Promise<SplitterProxyV2> {
    return super.deploy(
      splitter_,
      wethAddress_,
      overrides || {}
    ) as Promise<SplitterProxyV2>;
  }
  getDeployTransaction(
    splitter_: string,
    wethAddress_: string,
    overrides?: Overrides
  ): TransactionRequest {
    return super.getDeployTransaction(splitter_, wethAddress_, overrides || {});
  }
  attach(address: string): SplitterProxyV2 {
    return super.attach(address) as SplitterProxyV2;
  }
  connect(signer: Signer): SplitterProxyV2__factory {
    return super.connect(signer) as SplitterProxyV2__factory;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): SplitterProxyV2 {
    return new Contract(address, _abi, signerOrProvider) as SplitterProxyV2;
  }
}

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "splitter_",
        type: "address",
      },
      {
        internalType: "address",
        name: "wethAddress_",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    stateMutability: "payable",
    type: "fallback",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "merkleRoot_",
        type: "bytes32",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "initialized",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "merkleRoot",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "splitter",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "wethAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b506040516103c53803806103c583398101604081905261002f9161007c565b600080546001600160a01b039384166001600160a01b031991821617909155600280549290931691161790556100ae565b80516001600160a01b038116811461007757600080fd5b919050565b6000806040838503121561008e578182fd5b61009783610060565b91506100a560208401610060565b90509250929050565b610308806100bd6000396000f3fe60806040526004361061005e5760003560e01c80633cd8045e116100435780633cd8045e146101785780634f0e0ef3146101c45780639498bd71146101f157610065565b8063158ef93e1461011e5780632eb4a7ab1461015457610065565b3661006557005b600254600160a01b900460ff166100dd576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601560248201527f50726f7879206e6f7420696e697469616c697a6564000000000000000000000060448201526064015b60405180910390fd5b6000805473ffffffffffffffffffffffffffffffffffffffff16905060405136600082376000803683855af43d806000843e81801561011a578184f35b8184fd5b34801561012a57600080fd5b5060025461013f90600160a01b900460ff1681565b60405190151581526020015b60405180910390f35b34801561016057600080fd5b5061016a60015481565b60405190815260200161014b565b34801561018457600080fd5b5060005473ffffffffffffffffffffffffffffffffffffffff165b60405173ffffffffffffffffffffffffffffffffffffffff909116815260200161014b565b3480156101d057600080fd5b5060025461019f9073ffffffffffffffffffffffffffffffffffffffff1681565b3480156101fd57600080fd5b5061021161020c3660046102ba565b610213565b005b600254600160a01b900460ff1615610287576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601960248201527f50726f787920616c726561647920696e697469616c697a65640000000000000060448201526064016100d4565b600280547fffffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffff16600160a01b179055600155565b6000602082840312156102cb578081fd5b503591905056fea2646970667358221220138e7c704dd76bbc73e64263f304f04426f1a7d6711884ad4be45514c389283864736f6c63430008030033";
