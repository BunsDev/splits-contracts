/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import { Contract, ContractFactory, Overrides } from "@ethersproject/contracts";

import type { SplitStorage } from "../SplitStorage";

export class SplitStorage__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(overrides?: Overrides): Promise<SplitStorage> {
    return super.deploy(overrides || {}) as Promise<SplitStorage>;
  }
  getDeployTransaction(overrides?: Overrides): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): SplitStorage {
    return super.attach(address) as SplitStorage;
  }
  connect(signer: Signer): SplitStorage__factory {
    return super.connect(signer) as SplitStorage__factory;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): SplitStorage {
    return new Contract(address, _abi, signerOrProvider) as SplitStorage;
  }
}

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "balanceForWindow",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "currentWindow",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "depositedInWindow",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "merkleRoot",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5060f18061001f6000396000f3fe6080604052348015600f57600080fd5b506004361060465760003560e01c80631f13582314604b5780632eb4a7ab14606557806381e580d314606d578063ba0bafb414607c575b600080fd5b605360065481565b60405190815260200160405180910390f35b605360005481565b6053607836600460a4565b6084565b605360015481565b60048181548110609357600080fd5b600091825260209091200154905081565b60006020828403121560b4578081fd5b503591905056fea2646970667358221220cc5b3e04bee42ec39292537db4fd2e96c040265fea0ba8205f8bb7670d683e7a64736f6c63430008040033";
