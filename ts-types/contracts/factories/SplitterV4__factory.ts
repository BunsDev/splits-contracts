/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import { Contract, ContractFactory, Overrides } from "@ethersproject/contracts";

import type { SplitterV4 } from "../SplitterV4";

export class SplitterV4__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(overrides?: Overrides): Promise<SplitterV4> {
    return super.deploy(overrides || {}) as Promise<SplitterV4>;
  }
  getDeployTransaction(overrides?: Overrides): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): SplitterV4 {
    return super.attach(address) as SplitterV4;
  }
  connect(signer: Signer): SplitterV4__factory {
    return super.connect(signer) as SplitterV4__factory;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): SplitterV4 {
    return new Contract(address, _abi, signerOrProvider) as SplitterV4;
  }
}

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint32",
        name: "percent",
        type: "uint32",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "success",
        type: "bool",
      },
    ],
    name: "TransferETH",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint32",
        name: "percent",
        type: "uint32",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "success",
        type: "bool",
      },
    ],
    name: "TransferToken",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "uint32",
        name: "percent",
        type: "uint32",
      },
    ],
    name: "amountFromPercent",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "balanceForWindow",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "window",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "percentageAllocation",
        type: "uint256",
      },
      {
        internalType: "bytes32[]",
        name: "merkleProof",
        type: "bytes32[]",
      },
    ],
    name: "claim",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "currentWindow",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "window",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "getClaimHash",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "incrementWindow",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "initialized",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "window",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "isClaimed",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "merkleRoot",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "wethAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5061093f806100206000396000f3fe608060405234801561001057600080fd5b50600436106100be5760003560e01c80637965ff9b11610076578063ba0bafb41161005b578063ba0bafb41461019c578063f364c90c146101a5578063f8930fcd146101f3576100be565b80637965ff9b1461017657806381e580d314610189576100be565b8063338b1d31116100a7578063338b1d31146101145780634f0e0ef31461011e5780635d4df3bf14610163576100be565b8063158ef93e146100c35780632eb4a7ab146100fd575b600080fd5b6002546100e89074010000000000000000000000000000000000000000900460ff1681565b60405190151581526020015b60405180910390f35b61010660015481565b6040519081526020016100f4565b61011c61022d565b005b60025461013e9073ffffffffffffffffffffffffffffffffffffffff1681565b60405173ffffffffffffffffffffffffffffffffffffffff90911681526020016100f4565b61011c61017136600461077c565b6102c3565b610106610184366004610833565b610594565b610106610197366004610743565b6105b9565b61010660035481565b6100e86101b336600461075b565b6040805160208082019490945280820192909252805180830382018152606090920181528151918301919091206000908152600590925290205460ff1690565b61010661020136600461075b565b604080516020808201949094528082019290925280518083038201815260609092019052805191012090565b60035461026f5760048054600181018255600091909152477f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b909101556102a9565b6004610288600160035461028391906108c1565b6105da565b61029290476108c1565b815460018101835560009283526020909220909101555b6001600360008282546102bc919061086a565b9091555050565b85600354116103195760405162461bcd60e51b815260206004820181905260248201527f63616e6e6f7420636c61696d20666f722061206675747572652077696e646f7760448201526064015b60405180910390fd5b6040805160208082018990528183018890528251808303840181526060909201835281519181019190912060009081526005909152205460ff16156103c65760405162461bcd60e51b815260206004820152602860248201527f4163636f756e7420616c726561647920636c61696d656420746865206769766560448201527f6e2077696e646f770000000000000000000000000000000000000000000000006064820152608401610310565b60408051602080820189905281830188905282518083038401815260609092018352815191810191909120600090815260059091522080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0016600117905560408051602081018790527fffffffffffffffffffffffffffffffffffffffff000000000000000000000000606087901b1691810191909152605481018490526000906074016040516020818303038152906040528051906020012090506104c483838080602002602001604051908101604052809392919081815260200183836020028082843760009201919091525050600154915084905061060f565b6105105760405162461bcd60e51b815260206004820152600d60248201527f496e76616c69642070726f6f66000000000000000000000000000000000000006044820152606401610310565b600060648561051e8a6105da565b61052891906108a2565b6105329190610882565b905061053e86826106cc565b61058a5760405162461bcd60e51b815260206004820152600f60248201527f5472616e73666572206661696c656400000000000000000000000000000000006044820152606401610310565b5050505050505050565b600060646105a863ffffffff8416856108a2565b6105b29190610882565b9392505050565b600481815481106105c957600080fd5b600091825260209091200154905081565b6000600482815481106105fd57634e487b7160e01b600052603260045260246000fd5b90600052602060002001549050919050565b600081815b85518110156106c157600086828151811061063f57634e487b7160e01b600052603260045260246000fd5b602002602001015190508083116106815760408051602081018590529081018290526060016040516020818303038152906040528051906020012092506106ae565b60408051602081018390529081018490526060016040516020818303038152906040528051906020012092505b50806106b9816108d8565b915050610614565b509092149392505050565b60006105b283836000808373ffffffffffffffffffffffffffffffffffffffff168361753090604051600060405180830381858888f193505050503d8060008114610733576040519150601f19603f3d011682016040523d82523d6000602084013e610738565b606091505b509095945050505050565b600060208284031215610754578081fd5b5035919050565b6000806040838503121561076d578081fd5b50508035926020909101359150565b60008060008060008060a08789031215610794578182fd5b8635955060208701359450604087013573ffffffffffffffffffffffffffffffffffffffff811681146107c5578283fd5b935060608701359250608087013567ffffffffffffffff808211156107e8578384fd5b818901915089601f8301126107fb578384fd5b813581811115610809578485fd5b8a60208260051b850101111561081d578485fd5b6020830194508093505050509295509295509295565b60008060408385031215610845578182fd5b82359150602083013563ffffffff8116811461085f578182fd5b809150509250929050565b6000821982111561087d5761087d6108f3565b500190565b60008261089d57634e487b7160e01b81526012600452602481fd5b500490565b60008160001904831182151516156108bc576108bc6108f3565b500290565b6000828210156108d3576108d36108f3565b500390565b60006000198214156108ec576108ec6108f3565b5060010190565b634e487b7160e01b600052601160045260246000fdfea264697066735822122025cfb8d6214e7699e7f9ef00d622b2ef8f2e8f841fd0bb5e8f2791e7f5bc577164736f6c63430008030033";
