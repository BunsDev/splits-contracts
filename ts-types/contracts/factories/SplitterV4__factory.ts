/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import { Contract, ContractFactory, Overrides } from "@ethersproject/contracts";

import type { SplitterV4 } from "../SplitterV4";

export class SplitterV4__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(overrides?: Overrides): Promise<SplitterV4> {
    return super.deploy(overrides || {}) as Promise<SplitterV4>;
  }
  getDeployTransaction(overrides?: Overrides): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): SplitterV4 {
    return super.attach(address) as SplitterV4;
  }
  connect(signer: Signer): SplitterV4__factory {
    return super.connect(signer) as SplitterV4__factory;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): SplitterV4 {
    return new Contract(address, _abi, signerOrProvider) as SplitterV4;
  }
}

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint32",
        name: "percent",
        type: "uint32",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "success",
        type: "bool",
      },
    ],
    name: "TransferETH",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint32",
        name: "percent",
        type: "uint32",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "success",
        type: "bool",
      },
    ],
    name: "TransferToken",
    type: "event",
  },
  {
    inputs: [],
    name: "PERCENTAGE_SCALE",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "uint32",
        name: "percent",
        type: "uint32",
      },
    ],
    name: "amountFromPercent",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "window",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "scaledPercentageAllocation",
        type: "uint256",
      },
      {
        internalType: "bytes32[]",
        name: "merkleProof",
        type: "bytes32[]",
      },
    ],
    name: "claim",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "percentageAllocation",
        type: "uint256",
      },
      {
        internalType: "bytes32[]",
        name: "merkleProof",
        type: "bytes32[]",
      },
    ],
    name: "claimForAllWindows",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "currentWindow",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "window",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "getClaimHash",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "incrementWindow",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "window",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "isClaimed",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "merkleRoot",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "scaledPercent",
        type: "uint256",
      },
    ],
    name: "scaleAmountByPercentage",
    outputs: [
      {
        internalType: "uint256",
        name: "scaledAmount",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50610c43806100206000396000f3fe608060405234801561001057600080fd5b50600436106100be5760003560e01c80637965ff9b11610076578063a8f5f5ab1161005b578063a8f5f5ab1461013f578063ba0bafb414610152578063d2ef07951461015b576100be565b80637965ff9b146101195780638ffb5c971461012c576100be565b80632eb4a7ab116100a75780632eb4a7ab146100eb578063338b1d31146101075780633f26479e1461010f576100be565b80631e7df9d3146100c35780632e7ba6ef146100d8575b600080fd5b6100d66100d1366004610a06565b61017e565b005b6100d66100e6366004610ab0565b61031e565b6100f460005481565b6040519081526020015b60405180910390f35b6100d661055a565b6100f4620f424081565b6100f4610127366004610b37565b610611565b6100f461013a366004610b16565b610638565b6100f461014d366004610a85565b610652565b6100f460015481565b61016e610169366004610a85565b6106a0565b60405190151581526020016100fe565b6040516bffffffffffffffffffffffff19606086901b166020820152603481018490526000906054016040516020818303038152906040528051906020012090506101fe83838080602002602001604051908101604052809392919081815260200183836020028082843760009201829052505492508591506106cb9050565b61024f5760405162461bcd60e51b815260206004820152600d60248201527f496e76616c69642070726f6f660000000000000000000000000000000000000060448201526064015b60405180910390fd5b6000805b6001548110156102bf5761026781886106a0565b6102ad576102a06004828154811061028f57634e487b7160e01b600052603260045260246000fd5b906000526020600020015487610638565b6102aa9083610b6e565b91505b806102b781610bdc565b915050610253565b506102ca8682610788565b6103165760405162461bcd60e51b815260206004820152600f60248201527f5472616e73666572206661696c656400000000000000000000000000000000006044820152606401610246565b505050505050565b846001541161036f5760405162461bcd60e51b815260206004820181905260248201527f63616e6e6f7420636c61696d20666f722061206675747572652077696e646f776044820152606401610246565b61037985856106a0565b156103ec5760405162461bcd60e51b815260206004820152602860248201527f4163636f756e7420616c726561647920636c61696d656420746865206769766560448201527f6e2077696e646f770000000000000000000000000000000000000000000000006064820152608401610246565b6103f685856108d2565b6040516bffffffffffffffffffffffff19606086901b1660208201526034810184905260009060540160405160208183030381529060405280519060200120905061047683838080602002602001604051908101604052809392919081815260200183836020028082843760009201829052505492508591506106cb9050565b6104c25760405162461bcd60e51b815260206004820152600d60248201527f496e76616c69642070726f6f66000000000000000000000000000000000000006044820152606401610246565b60006104f9600488815481106104e857634e487b7160e01b600052603260045260246000fd5b906000526020600020015486610638565b90506105058682610788565b6105515760405162461bcd60e51b815260206004820152600f60248201527f5472616e73666572206661696c656400000000000000000000000000000000006044820152606401610246565b50505050505050565b60015461059c5760048054600181018255600091909152477f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b909101556105f8565b600480600180546105ad9190610bc5565b815481106105cb57634e487b7160e01b600052603260045260246000fd5b9060005260206000200154476105e19190610bc5565b815460018101835560009283526020909220909101555b600180600082825461060a9190610b6e565b9091555050565b6000606461062563ffffffff841685610ba6565b61062f9190610b86565b90505b92915050565b6000610648620f42406064610ba6565b6106258385610ba6565b6000828260405160200161068292919091825260601b6bffffffffffffffffffffffff1916602082015260340190565b60405160208183030381529060405280519060200120905092915050565b6000600560006106b08585610652565b815260208101919091526040016000205460ff169392505050565b600081815b855181101561077d5760008682815181106106fb57634e487b7160e01b600052603260045260246000fd5b6020026020010151905080831161073d57604080516020810185905290810182905260600160405160208183030381529060405280519060200120925061076a565b60408051602081018390529081018490526060016040516020818303038152906040528051906020012092505b508061077581610bdc565b9150506106d0565b509092149392505050565b60006107948383610923565b90508061063257600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663d0e30db0836040518263ffffffff1660e01b81526004016000604051808303818588803b15801561080557600080fd5b505af1158015610819573d6000803e3d6000fd5b50506002546040517fa9059cbb00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff888116600483015260248201889052909116935063a9059cbb92506044019050602060405180830381600087803b15801561089357600080fd5b505af11580156108a7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108cb9190610a5e565b5092915050565b6001600560006108e28585610652565b8152602081019190915260400160002080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00169115159190911790555050565b6000808373ffffffffffffffffffffffffffffffffffffffff168361753090604051600060405180830381858888f193505050503d8060008114610983576040519150601f19603f3d011682016040523d82523d6000602084013e610988565b606091505b509095945050505050565b803573ffffffffffffffffffffffffffffffffffffffff811681146109b757600080fd5b919050565b60008083601f8401126109cd578182fd5b50813567ffffffffffffffff8111156109e4578182fd5b6020830191508360208260051b85010111156109ff57600080fd5b9250929050565b60008060008060608587031215610a1b578384fd5b610a2485610993565b935060208501359250604085013567ffffffffffffffff811115610a46578283fd5b610a52878288016109bc565b95989497509550505050565b600060208284031215610a6f578081fd5b81518015158114610a7e578182fd5b9392505050565b60008060408385031215610a97578182fd5b82359150610aa760208401610993565b90509250929050565b600080600080600060808688031215610ac7578081fd5b85359450610ad760208701610993565b935060408601359250606086013567ffffffffffffffff811115610af9578182fd5b610b05888289016109bc565b969995985093965092949392505050565b60008060408385031215610b28578182fd5b50508035926020909101359150565b60008060408385031215610b49578182fd5b82359150602083013563ffffffff81168114610b63578182fd5b809150509250929050565b60008219821115610b8157610b81610bf7565b500190565b600082610ba157634e487b7160e01b81526012600452602481fd5b500490565b6000816000190483118215151615610bc057610bc0610bf7565b500290565b600082821015610bd757610bd7610bf7565b500390565b6000600019821415610bf057610bf0610bf7565b5060010190565b634e487b7160e01b600052601160045260246000fdfea26469706673582212207b0aae72e3f53e1f1f3b0ee46aa9056fd415367f715eae445eeec32051e968fa64736f6c63430008030033";
