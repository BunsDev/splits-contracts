/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import { Contract, ContractFactory, Overrides } from "@ethersproject/contracts";

import type { SplitterV4 } from "../SplitterV4";

export class SplitterV4__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(overrides?: Overrides): Promise<SplitterV4> {
    return super.deploy(overrides || {}) as Promise<SplitterV4>;
  }
  getDeployTransaction(overrides?: Overrides): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): SplitterV4 {
    return super.attach(address) as SplitterV4;
  }
  connect(signer: Signer): SplitterV4__factory {
    return super.connect(signer) as SplitterV4__factory;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): SplitterV4 {
    return new Contract(address, _abi, signerOrProvider) as SplitterV4;
  }
}

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint32",
        name: "percent",
        type: "uint32",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "success",
        type: "bool",
      },
    ],
    name: "TransferETH",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint32",
        name: "percent",
        type: "uint32",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "success",
        type: "bool",
      },
    ],
    name: "TransferToken",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "uint32",
        name: "percent",
        type: "uint32",
      },
    ],
    name: "amountFromPercent",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "balanceForWindow",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "window",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "percentageAllocation",
        type: "uint256",
      },
      {
        internalType: "bytes32[]",
        name: "merkleProof",
        type: "bytes32[]",
      },
    ],
    name: "claim",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "percentageAllocation",
        type: "uint256",
      },
      {
        internalType: "bytes32[]",
        name: "merkleProof",
        type: "bytes32[]",
      },
    ],
    name: "claimForAllWindows",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "currentWindow",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "window",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "getClaimHash",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "incrementWindow",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "initialized",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "window",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "isClaimed",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "merkleRoot",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "wethAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50610b67806100206000396000f3fe608060405234801561001057600080fd5b50600436106100c95760003560e01c80634f0e0ef311610081578063a8f5f5ab1161005b578063a8f5f5ab146101ba578063ba0bafb4146101cd578063d2ef0795146101d6576100c9565b80634f0e0ef31461014f5780637965ff9b1461019457806381e580d3146101a7576100c9565b80632e7ba6ef116100b25780632e7ba6ef1461011d5780632eb4a7ab14610130578063338b1d3114610147576100c9565b8063158ef93e146100ce5780631e7df9d314610108575b600080fd5b6002546100f39074010000000000000000000000000000000000000000900460ff1681565b60405190151581526020015b60405180910390f35b61011b61011636600461095a565b6101e9565b005b61011b61012b3660046109f5565b610399565b61013960015481565b6040519081526020016100ff565b61011b6105e5565b60025461016f9073ffffffffffffffffffffffffffffffffffffffff1681565b60405173ffffffffffffffffffffffffffffffffffffffff90911681526020016100ff565b6101396101a2366004610a5b565b61069e565b6101396101b53660046109b2565b6106c3565b6101396101c83660046109ca565b6106e4565b61013960035481565b6100f36101e43660046109ca565b610732565b6040516bffffffffffffffffffffffff19606086901b1660208201526034810184905260009060540160405160208183030381529060405280519060200120905061026b83838080602002602001604051908101604052809392919081815260200183836020028082843760009201919091525050600154915084905061075d565b6102bc5760405162461bcd60e51b815260206004820152600d60248201527f496e76616c69642070726f6f660000000000000000000000000000000000000060448201526064015b60405180910390fd5b6000805b60035481101561033a576102d48188610732565b61032857606486600483815481106102fc57634e487b7160e01b600052603260045260246000fd5b90600052602060002001546103119190610aca565b61031b9190610aaa565b6103259083610a92565b91505b8061033281610b00565b9150506102c0565b50610345868261081a565b6103915760405162461bcd60e51b815260206004820152600f60248201527f5472616e73666572206661696c6564000000000000000000000000000000000060448201526064016102b3565b505050505050565b84600354116103ea5760405162461bcd60e51b815260206004820181905260248201527f63616e6e6f7420636c61696d20666f722061206675747572652077696e646f7760448201526064016102b3565b6103f48585610732565b156104675760405162461bcd60e51b815260206004820152602860248201527f4163636f756e7420616c726561647920636c61696d656420746865206769766560448201527f6e2077696e646f7700000000000000000000000000000000000000000000000060648201526084016102b3565b6104718585610826565b6040516bffffffffffffffffffffffff19606086901b166020820152603481018490526000906054016040516020818303038152906040528051906020012090506104f383838080602002602001604051908101604052809392919081815260200183836020028082843760009201919091525050600154915084905061075d565b61053f5760405162461bcd60e51b815260206004820152600d60248201527f496e76616c69642070726f6f660000000000000000000000000000000000000060448201526064016102b3565b60006064856004898154811061056557634e487b7160e01b600052603260045260246000fd5b906000526020600020015461057a9190610aca565b6105849190610aaa565b9050610590868261081a565b6105dc5760405162461bcd60e51b815260206004820152600f60248201527f5472616e73666572206661696c6564000000000000000000000000000000000060448201526064016102b3565b50505050505050565b6003546106275760048054600181018255600091909152477f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b90910155610684565b60048060016003546106399190610ae9565b8154811061065757634e487b7160e01b600052603260045260246000fd5b90600052602060002001544761066d9190610ae9565b815460018101835560009283526020909220909101555b6001600360008282546106979190610a92565b9091555050565b600060646106b263ffffffff841685610aca565b6106bc9190610aaa565b9392505050565b600481815481106106d357600080fd5b600091825260209091200154905081565b6000828260405160200161071492919091825260601b6bffffffffffffffffffffffff1916602082015260340190565b60405160208183030381529060405280519060200120905092915050565b60006005600061074285856106e4565b815260208101919091526040016000205460ff169392505050565b600081815b855181101561080f57600086828151811061078d57634e487b7160e01b600052603260045260246000fd5b602002602001015190508083116107cf5760408051602081018590529081018290526060016040516020818303038152906040528051906020012092506107fc565b60408051602081018390529081018490526060016040516020818303038152906040528051906020012092505b508061080781610b00565b915050610762565b509092149392505050565b60006106bc8383610877565b60016005600061083685856106e4565b8152602081019190915260400160002080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00169115159190911790555050565b6000808373ffffffffffffffffffffffffffffffffffffffff168361753090604051600060405180830381858888f193505050503d80600081146108d7576040519150601f19603f3d011682016040523d82523d6000602084013e6108dc565b606091505b509095945050505050565b803573ffffffffffffffffffffffffffffffffffffffff8116811461090b57600080fd5b919050565b60008083601f840112610921578182fd5b50813567ffffffffffffffff811115610938578182fd5b6020830191508360208260051b850101111561095357600080fd5b9250929050565b6000806000806060858703121561096f578384fd5b610978856108e7565b935060208501359250604085013567ffffffffffffffff81111561099a578283fd5b6109a687828801610910565b95989497509550505050565b6000602082840312156109c3578081fd5b5035919050565b600080604083850312156109dc578182fd5b823591506109ec602084016108e7565b90509250929050565b600080600080600060808688031215610a0c578081fd5b85359450610a1c602087016108e7565b935060408601359250606086013567ffffffffffffffff811115610a3e578182fd5b610a4a88828901610910565b969995985093965092949392505050565b60008060408385031215610a6d578182fd5b82359150602083013563ffffffff81168114610a87578182fd5b809150509250929050565b60008219821115610aa557610aa5610b1b565b500190565b600082610ac557634e487b7160e01b81526012600452602481fd5b500490565b6000816000190483118215151615610ae457610ae4610b1b565b500290565b600082821015610afb57610afb610b1b565b500390565b6000600019821415610b1457610b14610b1b565b5060010190565b634e487b7160e01b600052601160045260246000fdfea264697066735822122013a3b54f5d04c7f534185d1e4d4ec6e33adc4f9525d16744d9250ce98d8f96c964736f6c63430008030033";
